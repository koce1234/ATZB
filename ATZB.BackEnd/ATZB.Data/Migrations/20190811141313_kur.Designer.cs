// <auto-generated />
using System;
using ATZB.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ATZB.Data.Migrations
{
    [DbContext(typeof(ATZBDbContext))]
    [Migration("20190811141313_kur")]
    partial class kur
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ATZB.Domain.ATZBOffert", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Offerts");
                });

            modelBuilder.Entity("ATZB.Domain.ATZBOrder", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("PriceTo")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<string>("Town");

                    b.Property<int>("TypeForOrder");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ATZB.Domain.ATZBUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<bool>("AnyObligations");

                    b.Property<int>("City");

                    b.Property<string>("CompanyName");

                    b.Property<string>("DDSNumber");

                    b.Property<string>("EGN");

                    b.Property<string>("ENK");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LKNummber");

                    b.Property<string>("LastName");

                    b.Property<string>("Mol");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Phone");

                    b.Property<string>("RegKSB");

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ATZB.Domain.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ATZBUserId");

                    b.Property<string>("ImageLink");

                    b.HasKey("Id");

                    b.HasIndex("ATZBUserId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ATZB.Domain.Models.TypeSpecial", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ATZBUserId");

                    b.Property<int>("TypeOfSpecial");

                    b.HasKey("Id");

                    b.HasIndex("ATZBUserId");

                    b.ToTable("TypeOfSpecials");
                });

            modelBuilder.Entity("ATZB.Domain.ATZBOffert", b =>
                {
                    b.HasOne("ATZB.Domain.ATZBUser", "User")
                        .WithMany("Offers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ATZB.Domain.ATZBOrder", b =>
                {
                    b.HasOne("ATZB.Domain.ATZBUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ATZB.Domain.Image", b =>
                {
                    b.HasOne("ATZB.Domain.ATZBUser")
                        .WithMany("ImagesLinks")
                        .HasForeignKey("ATZBUserId");
                });

            modelBuilder.Entity("ATZB.Domain.Models.TypeSpecial", b =>
                {
                    b.HasOne("ATZB.Domain.ATZBUser")
                        .WithMany("TypeOfSpecials")
                        .HasForeignKey("ATZBUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
